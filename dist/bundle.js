(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(15),a=r.n(t),o=r(645),i=r.n(o)()(a());i.push([n.id,"body {\r\n    margin: 0;\r\n    text-align: center;\r\n    font-family: 'Montserrat', sans-serif;\r\n    \r\n}\r\n\r\n#content {\r\n   position: relative;    \r\n   max-width: 960px;\r\n   padding: 1.5em;\r\n   margin: 0 auto;\r\n   border: solid 2px #52504e;\r\n   \r\n\r\n}\r\n\r\n\r\n\r\n.info-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n\r\n\r\n/* Nav */\r\n\r\nnav {\r\n    display: flex;\r\n    justify-content: center;\r\n    background-color: #dedcd7;\r\n}\r\n\r\nnav div {\r\n    padding: .75em;\r\n    font-size: 1.25rem;\r\n  \r\n}\r\n\r\n.nav-home {\r\n    margin-right: 2.5em;\r\n}\r\n\r\n.nav-contact {\r\n    margin-left: 2.5em;\r\n}\r\n\r\n.nav-home:hover, .nav-menu:hover, .nav-contact:hover {\r\n    cursor: pointer;\r\n    background-color: #52504e;\r\n    color: #dedcd7;;\r\n}\r\n\r\n.title {\r\n    font-size: 2rem;\r\n    margin-bottom: 1em;\r\n    \r\n}\r\n\r\n\r\n.description {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 1em;\r\n    text-align: start;\r\n}\r\n\r\n\r\n.days-container {\r\n    text-align: left;\r\n    padding-left: 380px;\r\n}\r\n\r\n.item-container {\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n\r\n.item-div {\r\n   border: 1px solid #52504e;\r\n   border-radius: 10px;\r\n   width: 40%;\r\n   \r\n}\r\n\r\n.item-title {\r\n    text-align: left;\r\n    margin-left: 40px;\r\n}\r\n\r\n/*.img-div {\r\n    background-image: url('./img/water.jpg');\r\n} */\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,kBAAkB;IAClB,qCAAqC;;AAEzC;;AAEA;GACG,kBAAkB;GAClB,gBAAgB;GAChB,cAAc;GACd,cAAc;GACd,yBAAyB;;;AAG5B;;;;AAIA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;AACjC;;;;AAIA,QAAQ;;AAER;IACI,aAAa;IACb,uBAAuB;IACvB,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,kBAAkB;;AAEtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,kBAAkB;;AAEtB;;;AAGA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;AACrB;;;AAGA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,6BAA6B;AACjC;;AAEA;GACG,yBAAyB;GACzB,mBAAmB;GACnB,UAAU;;AAEb;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;;GAEG",sourcesContent:["body {\r\n    margin: 0;\r\n    text-align: center;\r\n    font-family: 'Montserrat', sans-serif;\r\n    \r\n}\r\n\r\n#content {\r\n   position: relative;    \r\n   max-width: 960px;\r\n   padding: 1.5em;\r\n   margin: 0 auto;\r\n   border: solid 2px #52504e;\r\n   \r\n\r\n}\r\n\r\n\r\n\r\n.info-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n\r\n\r\n/* Nav */\r\n\r\nnav {\r\n    display: flex;\r\n    justify-content: center;\r\n    background-color: #dedcd7;\r\n}\r\n\r\nnav div {\r\n    padding: .75em;\r\n    font-size: 1.25rem;\r\n  \r\n}\r\n\r\n.nav-home {\r\n    margin-right: 2.5em;\r\n}\r\n\r\n.nav-contact {\r\n    margin-left: 2.5em;\r\n}\r\n\r\n.nav-home:hover, .nav-menu:hover, .nav-contact:hover {\r\n    cursor: pointer;\r\n    background-color: #52504e;\r\n    color: #dedcd7;;\r\n}\r\n\r\n.title {\r\n    font-size: 2rem;\r\n    margin-bottom: 1em;\r\n    \r\n}\r\n\r\n\r\n.description {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 1em;\r\n    text-align: start;\r\n}\r\n\r\n\r\n.days-container {\r\n    text-align: left;\r\n    padding-left: 380px;\r\n}\r\n\r\n.item-container {\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n\r\n.item-div {\r\n   border: 1px solid #52504e;\r\n   border-radius: 10px;\r\n   width: 40%;\r\n   \r\n}\r\n\r\n.item-title {\r\n    text-align: left;\r\n    margin-left: 40px;\r\n}\r\n\r\n/*.img-div {\r\n    background-image: url('./img/water.jpg');\r\n} */\r\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r=n(e);return e[2]?"@media ".concat(e[2]," {").concat(r,"}"):r})).join("")},e.i=function(n,r,t){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(t)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);t&&a[s[0]]||(r&&(s[2]?s[2]="".concat(r," and ").concat(s[2]):s[2]=r),e.push(s))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var r=0,t=new Array(e);r<e;r++)t[r]=n[r];return t}n.exports=function(n){var r,t,a=(t=4,function(n){if(Array.isArray(n))return n}(r=n)||function(n,e){var r=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=r){var t,a,o=[],i=!0,c=!1;try{for(r=r.call(n);!(i=(t=r.next()).done)&&(o.push(t.value),!e||o.length!==e);i=!0);}catch(n){c=!0,a=n}finally{try{i||null==r.return||r.return()}finally{if(c)throw a}}return o}}(r,t)||function(n,r){if(n){if("string"==typeof n)return e(n,r);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?e(n,r):void 0}}(r,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if(!i)return o;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(s," */"),l=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[o].concat(l).concat([d]).join("\n")}return[o].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],d=t.base?s[0]+t.base:s[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var m=r(u),A={css:s[1],media:s[2],sourceMap:s[3]};-1!==m?(e[m].references++,e[m].updater(A)):e.push({identifier:u,updater:a(A,t),references:1}),i.push(u)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=r(o[i]);e[c].references--}for(var s=t(n,a),d=0;d<o.length;d++){var l=r(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t=r.css,a=r.media,o=r.sourceMap;a?n.setAttribute("media",a):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},996:(n,e,r)=>{n.exports=r.p+"7209ac33a1bcaac2994e.jpg"},770:(n,e,r)=>{n.exports=r.p+"65a1f4d261a618bb70ac.jpg"},472:(n,e,r)=>{n.exports=r.p+"b0fc87d3ade352238db4.jpg"}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),(()=>{var n=r(379),e=r.n(n),t=r(795),a=r.n(t),o=r(569),i=r.n(o),c=r(565),s=r.n(c),d=r(216),l=r.n(d),u=r(589),m=r.n(u),A=r(426),p={};p.styleTagTransform=m(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=a(),p.insertStyleElement=l(),e()(A.Z,p),A.Z&&A.Z.locals&&A.Z.locals;var f=r(770),v=r(472),g=r(996);const h=function(n){const e=document.createElement("div"),r=document.createElement("h1");r.innerText="The Pizza Co.",e.classList.add("title"),e.append(r);const t=document.createElement("div"),a=document.createElement("p");a.innerText="Welcome to The Pizza Co. Here we express our passion for good food and conversations with friends. We offer the classics as well as our or your own creations. Come join us for a nice cozy time!",t.classList.add("description"),t.append(a);const o=document.createElement("h3");o.innerText="Hours";const i=document.createElement("div"),c=document.createElement("div");c.classList.add("days-container");const s=document.createElement("p"),d=document.createElement("p"),l=document.createElement("p");s.innerText="Monday - Friday: 9am - 10pm",d.innerText="Saturday: 10am - 11pm",l.innerText="Sunday: 10am - 5pm",c.append(s,d,l),i.append(o,c);const u=document.createElement("div"),m=new Image;m.src=f,m.style.height="40%",m.style.width="40%",u.append(m),n.append(e,u,t,i)},y=document.getElementById("home"),B=document.getElementById("menu"),C=document.getElementById("contact"),b=document.getElementById("content");function x(n){for(;n.firstChild;)n.removeChild(n.firstChild)}B.addEventListener("click",(n=>{console.log(n.target),x(b),function(n){const e=document.createElement("div"),r=document.createElement("h3"),t=document.createElement("div");t.classList.add("item-container"),r.innerText="Beverages";const a=document.createElement("div"),o=document.createElement("h4"),i=document.createElement("p"),c=document.createElement("div");a.classList.add("item-div");const s=new Image;s.src=v,s.style.height="50%",s.style.width="35%",s.style.borderRadius="10px",o.innerText="Water",o.classList.add("item-title"),i.innerText="Natural spring water with ice.",c.append(s),c.classList.add("img-div"),a.append(o,i,c);const d=document.createElement("div"),l=document.createElement("h4"),u=document.createElement("p"),m=document.createElement("div");d.classList.add("item-div");const A=new Image;A.src=g,A.style.height="50%",A.style.width="35%",A.style.borderRadius="10px",l.innerText="Coffee",l.classList.add("item-title"),u.innerText="A Warm cup of quality coffee",m.append(A),m.classList.add("img-div"),d.append(l,u,m),t.append(a,d),e.append(r,t);const p=document.createElement("div"),f=document.createElement("h3"),h=document.createElement("div");h.classList.add("item-container"),f.innerText="Classic Pizza",p.append(f,h),n.append(e,p)}(b)})),y.addEventListener("click",(n=>{x(b),h(b)})),C.addEventListener("click",(n=>{x(b),function(n){const e=document.createElement("div"),r=document.createElement("h3");e.append(r),r.innerText="Contact Us",n.append(e)}(b)})),h(b)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,